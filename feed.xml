<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>코딩만 잘하면 될까? - Articles</title>
    <description>A beautiful narrative written with the world's most elegant publishing platform. The story begins here.</description>
    <link>
    </link>
    
      
      <item>
        <title>재귀 vs. 반복</title>
        
          <description>&lt;p&gt;&lt;strong&gt;Binary Search&lt;/strong&gt; 이분탐색을 구현하면서, 계속 런타임 에러가 났다. 처음에 재귀로 구현을 시작했는데, 재귀에 너무 큰 값이 들어오면서 stack overflow 에러가 났나 싶어서 다시 while 문으로 구현했다. 하지만 while 문으로 구현한 이후에도 계속 런타임 에러가 떠서 확인해보니, n과 m을 헷갈려서 잘못 적었던 것이었다.&lt;/p&gt;

</description>
        
        <pubDate>Fri, 26 Feb 2021 10:18:00 +0000</pubDate>
        <link>
        /recursion</link>
        <guid isPermaLink="true">/recursion</guid>
      </item>
      
    
      
      <item>
        <title>[머신러닝]나이브 베이즈 분류기(Naive Bayes Classifier)</title>
        
          <description>&lt;p&gt;강남의 어느 검색 솔루션 기업에서 인턴한지 어연 4주차가 지나간다. 중간지점을 지나가면서 한 것을 정리할 겸 나이브베이즈 문서 분류기 구현과 이론에 대해서 정리해 보려고 한다. 최대한 쉽게!!&lt;/p&gt;

</description>
        
        <pubDate>Fri, 26 Feb 2021 10:18:00 +0000</pubDate>
        <link>
        /naivebayes</link>
        <guid isPermaLink="true">/naivebayes</guid>
      </item>
      
    
      
      <item>
        <title>TDD, 리펙토링이란?</title>
        
          <description>&lt;h2 id=&quot;test-driven-development테스트-주도-개발-tdd&quot;&gt;Test Driven Development(테스트 주도 개발, TDD)&lt;/h2&gt;

</description>
        
        <pubDate>Sun, 21 Feb 2021 10:18:00 +0000</pubDate>
        <link>
        /tdd</link>
        <guid isPermaLink="true">/tdd</guid>
      </item>
      
    
      
      <item>
        <title>[알고리즘] 세그먼트 트리를 활용한 히스토그램 문제 풀이_2</title>
        
          <description>&lt;p&gt;앞서 &lt;a href=&quot;https://www.acmicpc.net/problem/6549&quot;&gt;히스토그램 문제&lt;/a&gt;에 대한 접근 방법을 간단하게 설명하고 세그먼트 트리를 히스토그램에 맞추어서 설명했다. 이번 글에서는 구체적으로 어떻게 세그먼트 트리를 구현하여 히스토그램 문제를 푸는데까지 이어지는지 다루어 보도록 하겠다.&lt;/p&gt;

</description>
        
        <pubDate>Thu, 10 Sep 2020 10:18:00 +0000</pubDate>
        <link>
        /segment-tree2</link>
        <guid isPermaLink="true">/segment-tree2</guid>
      </item>
      
    
      
      <item>
        <title>[알고리즘] 세그먼트 트리를 활용한 히스토그램 문제 풀이_1</title>
        
          <description>&lt;p&gt;히스토그램에서 가장 큰 직사각형의 크기를 찾는 알고리즘을 풀다가, 관련 문제의 풀이법을 간단히 찾아서 금방 해결할 줄 알았으니 구현에서 의도치 않은 오랜 시간이 걸렸다.&lt;/p&gt;

</description>
        
        <pubDate>Wed, 09 Sep 2020 10:18:00 +0000</pubDate>
        <link>
        /segment-tree1</link>
        <guid isPermaLink="true">/segment-tree1</guid>
      </item>
      
    
      
      <item>
        <title>[알고리즘] 쿼드 트리</title>
        
          <description>&lt;p&gt;자료구조 중 처음 들어본 &lt;small&gt;(배웠는데 기억 못하는)&lt;/small&gt; 개념이 나와서 정리해본다. 알고리즘 문제 중 분할 문제를 푸는 중에 쿼드 트리를 사용하는 알고리즘 이라는 언급을 보고 쿼드 트리라는 것이 어떠한 것인지 살펴보기로 한다.&lt;/p&gt;

</description>
        
        <pubDate>Wed, 12 Aug 2020 10:18:00 +0000</pubDate>
        <link>
        /quadTree</link>
        <guid isPermaLink="true">/quadTree</guid>
      </item>
      
    
  </channel>
</rss>
